#BlueJ class context
comment0.target=Robot
comment0.text=\r\n\ The\ `Robot`\ class\ represents\ a\ robot\ in\ the\ world.\r\n\ This\ is\ an\ abstract\ class\ that\ serves\ as\ the\ base\ class\ for\ all\ robot\ types.\r\n\ It\ defines\ common\ attributes\ and\ behaviors\ shared\ by\ all\ robots\ in\ the\ system.\r\n
comment1.params=newName\ color\ newPosX\ newPosY
comment1.target=Robot(java.lang.String,\ java.lang.String,\ int,\ int)
comment1.text=\r\n\r\n\ Creates\ a\ new\ Robot\ with\ the\ specified\ name,\ color,\ and\ initial\ position.\r\n\ If\ the\ world\ has\ available\ space\ for\ a\ new\ robot,\ it\ sets\ the\ name,\ position,\ and\ color\ as\ specified.\r\n\ If\ the\ provided\ name\ is\ too\ short,\ it\ generates\ a\ default\ name\ with\ a\ prefix\ and\ a\ counter.\r\n\ The\ robot's\ initial\ position\ is\ set\ within\ the\ world's\ boundaries.\ If\ the\ position\ is\ out\ of\ bounds,\r\n\ it\ is\ set\ to\ (0,\ 0)\ by\ default.\r\n\r\n\ @param\ newName\ The\ name\ of\ the\ Robot.\r\n\ @param\ color\ The\ color\ of\ the\ Robot.\r\n\ @param\ newPosX\ The\ initial\ X-coordinate\ position.\r\n\ @param\ newPosY\ The\ initial\ Y-coordinate\ position.\r\n
comment10.params=
comment10.target=World\ getWorld()
comment10.text=\r\n\ Gets\ the\ world\ in\ which\ the\ robot\ exists.\r\n\r\n\ @return\ The\ World\ object\ associated\ with\ the\ robot.\r\n
comment11.params=yPosition
comment11.target=void\ setYPosition(int)
comment11.text=\r\n\ Sets\ the\ Y-coordinate\ position\ of\ the\ robot\ to\ the\ specified\ value.\r\n\r\n\ @param\ yPosition\ The\ new\ Y-coordinate\ position\ to\ set\ for\ the\ robot.\r\n
comment12.params=
comment12.target=int\ getDirection()
comment12.text=\r\n\ Gets\ the\ current\ direction\ of\ the\ robot.\r\n\r\n\ @return\ The\ direction\ of\ the\ robot.\r\n
comment13.params=direction
comment13.target=void\ setDirection(int)
comment13.text=\r\n\ Sets\ the\ direction\ of\ the\ robot\ to\ the\ specified\ value.\r\n\r\n\ @param\ direction\ The\ new\ direction\ to\ set\ for\ the\ robot.\r\n
comment14.params=
comment14.target=java.lang.String\ getName()
comment14.text=\r\n\ Gets\ the\ name\ of\ the\ robot.\r\n\r\n\ @return\ The\ name\ of\ the\ robot.\r\n
comment15.params=
comment15.target=java.lang.String\ getColorBody()
comment15.text=\r\n\ Gets\ the\ color\ of\ the\ robot's\ body.\r\n\r\n\ @return\ The\ color\ of\ the\ robot's\ body.\r\n
comment16.params=
comment16.target=CanvasRobot\ getCanvasRobot()
comment16.text=\r\n\ Gets\ the\ CanvasRobot\ object\ associated\ with\ the\ robot.\r\n\r\n\ @return\ The\ CanvasRobot\ object\ used\ for\ rendering\ the\ robot\ on\ the\ canvas.\r\n
comment17.params=
comment17.target=void\ turn()
comment17.text=\r\n\ Changes\ the\ direction\ of\ the\ robot\ by\ rotating\ it\ 90\ degrees\ clockwise.\r\n\ The\ robot's\ direction\ values\ range\ from\ 0\ to\ 3,\ representing\ north,\ east,\ south,\ and\ west.\r\n\ This\ method\ increments\ the\ direction\ value,\ wrapping\ around\ to\ 0\ if\ it\ reaches\ 4.\r\n
comment18.params=newColor
comment18.target=void\ setColorBody(java.lang.String)
comment18.text=\r\n\ Sets\ the\ color\ of\ the\ robot's\ body\ to\ the\ specified\ color.\r\n\ The\ provided\ color\ is\ case-insensitive\ and\ should\ match\ one\ of\ the\ valid\ color\ options.\r\n\ If\ the\ color\ is\ not\ recognized,\ the\ default\ color\ "BLUE"\ is\ used.\r\n\r\n\ @param\ newColor\ The\ new\ color\ for\ the\ robot's\ body.\r\n
comment19.params=
comment19.target=void\ updateColor()
comment19.text=\r\n\ Updates\ the\ color\ of\ the\ robot's\ body\ on\ the\ canvas.\r\n\ This\ method\ sets\ the\ color\ of\ the\ robot's\ body\ on\ the\ canvas\ to\ the\ current\ colorBody\ value.\r\n
comment2.params=
comment2.target=void\ move()
comment2.text=\r\n\ Moves\ the\ robot.\ Subclasses\ must\ provide\ their\ own\ implementation\ to\ define\r\n\ the\ specific\ logic\ for\ moving\ the\ robot.\r\n
comment20.params=
comment20.target=boolean\ isVisible()
comment20.text=\r\n\ Checks\ if\ the\ robot\ is\ currently\ visible.\r\n\r\n\ @return\ true\ if\ the\ robot\ is\ visible,\ false\ if\ it\ is\ not.\r\n
comment3.params=
comment3.target=void\ moveUp()
comment3.text=\r\n\ Moves\ the\ robot\ down\ by\ decrementing\ its\ Y-coordinate\ position\ by\ 1\ and\ updates\ the\ robot's\r\n\ position\ on\ the\ canvas.\r\n
comment4.params=
comment4.target=void\ moveDown()
comment4.text=\r\n\ Moves\ the\ robot\ down\ by\ incrementing\ its\ Y-coordinate\ position\ by\ 1\ and\ updates\ the\ robot's\r\n\ position\ on\ the\ canvas.\r\n
comment5.params=
comment5.target=void\ moveLeft()
comment5.text=\r\n\ Moves\ the\ robot\ to\ the\ left\ by\ decrementing\ its\ X-coordinate\ position\ by\ 1\ and\ updates\ the\ robot's\r\n\ position\ on\ the\ canvas.\r\n
comment6.params=
comment6.target=void\ moveRight()
comment6.text=\r\n\ Moves\ the\ robot\ to\ the\ right\ by\ incrementing\ its\ X-coordinate\ position\ by\ 1\ and\ updates\ the\ robot's\r\n\ position\ on\ the\ canvas.\r\n
comment7.params=
comment7.target=int\ getXPosition()
comment7.text=\r\n\ Gets\ the\ current\ X-coordinate\ position\ of\ the\ robot.\r\n\r\n\ @return\ The\ X-coordinate\ position\ of\ the\ robot.\r\n
comment8.params=xPosition
comment8.target=void\ setXPosition(int)
comment8.text=\r\n\ Sets\ the\ X-coordinate\ position\ of\ the\ robot\ to\ the\ specified\ value.\r\n\r\n\ @param\ xPosition\ The\ new\ X-coordinate\ position\ to\ set\ for\ the\ robot.\r\n
comment9.params=
comment9.target=int\ getYPosition()
comment9.text=\r\n\ Gets\ the\ current\ Y-coordinate\ position\ of\ the\ robot.\r\n\r\n\ @return\ The\ Y-coordinate\ position\ of\ the\ robot.\r\n
numComments=21
